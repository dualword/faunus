#!/usr/bin/env yason.py
energy:                              # define system energy
    - nonbonded_pmwca:                     # nonbonded interactions can be arbitrarily
        summation_policy: serial
        wca: {mixing: LB}
        coulomb: {epsr: 80}
atomlist:                             # define atom types
    - Na: {q:  1.0, eps: 0.15, sigma: 4.0, dp: 50}
    - Cl: {q: -1.0, eps: 0.20, sigma: 4.0, dp: 50}
moleculelist:                        # define molecule types
    - salt: {atoms: [Na, Cl], atomic: true}
insertmolecules:                     # create an initial system (random insertion)
    - salt: {N: 1000}
moves:                               # define Monte Carlo moves
    - transrot: {molecule: salt}     # atomic translation (and rotation if anisotropic atoms)
analysis:                            # define on the fly analysis
  #- systemenergy: {file: energy.dat, nstep: 100} # save system energy
    - savestate: {file: confout.pqr} # save PQR file for visualization
      #- savestate: {file: state.json } # save restart file
mcloop: {macro: 10, micro: 30}     # number of MC steps
geometry: {type: cuboid, length: 200} # sidelength(s): number OR array
temperature: 300                     # in K
random: {seed: fixed}                # seed for pseudo random number generator
